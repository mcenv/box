import {
  string::repeat,
}

load function init() → () {
  # todo
  let _: end = $/"scoreboard players set #free mcx 0";
  ()
};

function deallocate() → () {
  let index = 0;
  let _: end = $/"execute store result storage mcx: int[-1] int 1 run scoreboard players remove #free mcx 1";

  let _ = touch(index);
  let _: end = $/"data remove storage mcx: heap[-2][-2][-2][-2][-2][-2][-2][-2][-2][-2][-2][-2][-2][-2][-2][-2][0]";
  ()
};

function touch(index: int) → () {
  let _: end = $/"execute store result score #0 mcx run data get storage mcx: int[-1]";
  let _: end = $/"scoreboard players set #1 mcx 65536";
  let _: end = $/"scoreboard players operation #0 mcx *= #1 mcx";
  let _ = $shift(0);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(1);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(2);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(3);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(4);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(5);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(6);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(7);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(8);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(9);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(10);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(11);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(12);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(13);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(14);

  let _: end = $/"scoreboard players operation #0 mcx += #0 mcx";
  let _ = $shift(15);

  ()
};

static inline function shift(depth: int) → `() {
  let path = repeat(("[-2]", depth));
  `(
    let _: end = $/"execute store result score #1 mcx if data storage mcx: heap${path}[]";
    let _: end = $/"execute if score #0 mcx matches 0.. if score #1 mcx matches 3.. run data remove storage mcx: heap${path}[2]";
    let _: end = $/"execute if score #0 mcx matches ..-1 if score #1 mcx matches ..2 run data modify storage mcx: heap${path} append value []";
    ()
  )
};
