export builtin def +: Proc Tuple(Int, Int) -> Int;

export builtin def -: Proc Tuple(Int, Int) -> Int;

export builtin def *: Proc Tuple(Int, Int) -> Int;

export builtin def /: Proc Tuple(Int, Int) -> Int;

export builtin def %: Proc Tuple(Int, Int) -> Int;

export builtin def min: Proc Tuple(Int, Int) -> Int;

export builtin def max: Proc Tuple(Int, Int) -> Int;

export builtin def =: Proc Tuple(Int, Int) -> Bool;

export builtin def <: Proc Tuple(Int, Int) -> Bool;

export builtin def <=: Proc Tuple(Int, Int) -> Bool;

export builtin def >: Proc Tuple(Int, Int) -> Bool;

export builtin def >=: Proc Tuple(Int, Int) -> Bool;

export builtin def !=: Proc Tuple(Int, Int) -> Bool;

export builtin def to_byte: Proc Int -> Byte;

export builtin def to_short: Proc Int -> Short;

export def to_int: Proc Int -> Int = $(identity @ `Int);

export builtin def to_long: Proc Int -> Long;

export builtin def to_float: Proc Int -> Float;

export builtin def to_double: Proc Int -> Double;

export builtin def to_string: Proc Int -> String;
