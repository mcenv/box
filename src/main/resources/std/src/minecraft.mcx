import {
  int::to_string,
  magic::command,
}

export function reload() → () {
  $command("reload")
};

export static function save_all(flush: bool) → `() {
  if flush {
    command("save-all flush")
  } else {
    command("save-all")
  }
};

export static function auto_save(enabled: bool) → `() {
  if enabled {
    command("save-on")
  } else {
    command("save-off")
  }
};

export function seed() → int {
  let _: end = $command("data modify storage mcx: int append value 0");
  $command("execute store result storage mcx: int[-1] int 1 run seed")
};

export static function set_idle_timeout(minutes: int) → `int {
  `(
    let _: end = $command("data modify storage mcx: int append value 0");
    $command("execute store result storage mcx: int[-1] int 1 run setidletimeout " ++ to_string(minutes))
  )
};

export function halt() → () {
  $command("stop")
};
