{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "mcx",
  "scopeName": "source.mcx",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#module"
    },
    {
      "include": "#term"
    }
  ],
  "repository": {
    "module": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "begin": "\\b(import)\\s+\\{",
          "beginCaptures": {
            "1": {
              "name": "keyword.import.mcx"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#location"
            },
            {
              "match": ",",
              "name": "keyword.control.mcx"
            }
          ]
        },
        {
          "include": "#definition"
        }
      ]
    },
    "definition": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#annotation"
        },
        {
          "include": "#modifier"
        },
        {
          "begin": "\\b(def)\\s+([^:\\s;,()\\[\\]{}]+)\\s+(:)\\s+",
          "beginCaptures": {
            "1": {
              "name": "keyword.mcx"
            },
            "2": {
              "name": "entity.name.function.mcx"
            },
            "3": {
              "name": "keyword.control.mcx"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "keyword.control.mcx"
            }
          },
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "match": ":=",
              "name": "keyword.control.mcx"
            },
            {
              "include": "#term"
            }
          ]
        }
      ]
    },
    "term": {
      "patterns": [
        {
          "match": "\\b(?:tag|type|bool|byte|short|int|long|float|double|string|byte_array|int_array|long_array|list|compound|union|point|func|code)\\b",
          "name": "entity.name.type.mcx"
        },
        {
          "match": "\\b(?:true|false|tag_end|tag_byte|tag_short|tag_int|tag_long|tag_float|tag_double|tag_string|tag_byte_array|tag_int_array|tag_long_array|tag_list|tag_compound)\\b",
          "name": "constant.language.mcx"
        },
        {
          "match": "(?:\\b(?:if|then|else|is|as)\\b)|(?:->)|[\\\\`$/_]",
          "name": "keyword.control.mcx"
        },
        {
          "begin": "\\blet\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.mcx"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "keyword.control.mcx"
            }
          },
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#term"
            },
            {
              "match": ":=",
              "name": "keyword.control.mcx"
            }
          ]
        },
        {
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.json",
          "patterns": [
            {
              "match": "\\\\(?:[\"\\\\])",
              "name": "constant.character.escape.mcx"
            },
            {
              "match": "\\\\.",
              "name": "invalid.illegal.mcx"
            }
          ]
        },
        {
          "begin": "([^:\\s;,()\\[\\]{}]+)(?=\\()",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.mcx"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "include": "#term"
            },
            {
              "match": ",",
              "name": "keyword.control.mcx"
            }
          ]
        },
        {
          "match": "([-+]?(?:[0-9]+))([bls])",
          "captures": {
            "1": {
              "name": "constant.numeric.mcx"
            },
            "2": {
              "name": "keyword.mcx"
            }
          }
        },
        {
          "match": "([-+]?(?:[0-9]+[.]?|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?)([df]?)",
          "captures": {
            "1": {
              "name": "constant.numeric.mcx"
            },
            "2": {
              "name": "keyword.mcx"
            }
          }
        },
        {
          "match": "[^:\\s;,()\\[\\]{}]+",
          "name": "variable.mcx"
        }
      ]
    },
    "annotation": {
      "match": "@(?:deprecated|unstable)\\b",
      "name": "keyword.annotation.mcx"
    },
    "modifier": {
      "match": "\\b(?:builtin|export|rec|const)\\b",
      "name": "keyword.modifier.mcx"
    },
    "location": {
      "patterns": [
        {
          "match": "[^:\\s;,()\\[\\]{}]+",
          "name": "entity.name.function.mcx"
        },
        {
          "match": "::",
          "name": "keyword.control.mcx"
        }
      ]
    },
    "comment": {
      "match": "#.*",
      "name": "comment.line.mcx"
    }
  }
}
