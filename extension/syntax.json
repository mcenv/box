{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "mcx",
  "scopeName": "source.mcx",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#keyword"
    },
    {
      "begin": "\\b(import)\\b\\s*{",
      "beginCaptures": {
        "1": {
          "name": "keyword.mcx"
        }
      },
      "end": "}",
      "patterns": [
        {
          "name": "entity.name.function.mcx",
          "match": "[^ \n\r:;,()\\[\\]{}⟨⟩]+"
        },
        {
          "name": "keyword.mcx",
          "match": "::"
        }
      ]
    },
    {
      "match": "\\b(def) +([^ \n\r:;,()\\[\\]{}⟨⟩]+)",
      "captures": {
        "1": {
          "name": "keyword.mcx"
        },
        "2": {
          "name": "entity.name.function.mcx"
        }
      }
    },
    {
      "name": "keyword.mcx",
      "match": "\\b(?:import|builtin|export|inline|const|world|def)\\b"
    },
    {
      "name": "support.type.mcx",
      "match": "\\b(?:Bool|Byte|Short|Int|Long|Float|Double|String|ByteArray|IntArray|LongArray|List|Compound|Union)\\b"
    },
    {
      "include": "#term"
    }
  ],
  "repository": {
    "comment": {
      "name": "comment.line.mcx",
      "match": "#.*"
    },
    "keyword": {
      "name": "keyword.operator.mcx",
      "match": "[:*→=,;&/`$_]|(?:\\.\\.)"
    },
    "term": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#keyword"
        },
        {
          "name": "keyword.control.mcx",
          "match": "\\b(?:|if|then|else|is|let)\\b"
        },
        {
          "name": "constant.language.mcx",
          "match": "\\b(?:true|false)\\b"
        },
        {
          "name": "constant.numeric.mcx",
          "match": "\\b(?:[-+]?(?:0|[1-9][0-9]*)[bsl]?)\\b"
        },
        {
          "name": "constant.numeric.mcx",
          "match": "\\b(?:[-+]?(?:[0-9]+\\.?|[0-9]*\\.[0-9]+)(?:e[-+]?[0-9]+)?[fd]?)\\b"
        },
        {
          "include": "#string"
        },
        {
          "name": "entity.name.function.mcx",
          "match": "[^ \n\r:;,()\\[\\]{}⟨⟩]+(?=[(⟨])"
        },
        {
          "name": "variable.mcx",
          "match": "[^ \n\r:;,()\\[\\]{}⟨⟩]+"
        }
      ]
    },
    "string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "string.quoted.double.mcx"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "string.quoted.double.mcx"
        }
      },
      "patterns": [
        {
          "include": "#stringcontent"
        }
      ]
    },
    "stringcontent": {
      "patterns": [
        {
          "match": "\\\\(?:[\"\\\\])",
          "name": "constant.character.escape.mcx"
        },
        {
          "begin": "\\$\\{",
          "beginCaptures": {
            "0": {
              "name": "keyword.mcx"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "keyword.mcx"
            }
          },
          "patterns": [
            {
              "include": "#term"
            }
          ]
        },
        {
          "match": "[^\"\\\\$]+",
          "name": "string.quoted.double.mcx"
        },
        {
          "match": "\\\\.",
          "name": "invalid.illegal.mcx"
        }
      ]
    }
  }
}
