export def min_value : i32 := -2147483648;

export def max_value : i32 := 2147483647;

export def + : proc(i32, i32) -> i32 := builtin i32::+;

export def - : proc(i32, i32) -> i32 := builtin i32::-;

export def * : proc(i32, i32) -> i32 := builtin i32::*;

export def / : proc(i32, i32) -> i32 := builtin i32::/;

export def % : proc(i32, i32) -> i32 := builtin i32::%;

export def min : proc(i32, i32) -> i32 := builtin i32::min;

export def max : proc(i32, i32) -> i32 := builtin i32::max;

export def = : proc(i32, i32) -> bool := builtin i32::=;

export def < : proc(i32, i32) -> bool := builtin i32::<;

export def <= : proc(i32, i32) -> bool := builtin i32::<=;

export def > : proc(i32, i32) -> bool := builtin i32::>;

export def >= : proc(i32, i32) -> bool := builtin i32::>=;

export def != : proc(i32, i32) -> bool := builtin i32::!=;

export def to_i8 : proc(i32) -> i8 := builtin i32::to_i8;

export def to_i16 : proc(i32) -> i16 := builtin i32::to_i16;

export def to_i32(self : i32) : i32 := self;

export def to_i64 : proc(i32) -> i64 := builtin i32::to_i64;

export def to_f32 : proc(i32) -> f32 := builtin i32::to_f32;

export def to_f64 : proc(i32) -> f64 := builtin i32::to_f64;

export def to_wtf16 : proc(i32) -> wtf16 := builtin i32::to_wtf16;

test def 1_+_2_=_3 := (1 + 2) = 3;

test def 1_-_2_=_-1 := (1 - 2) = -1;

test def 2_*_3_=_6 := (2 * 3) = 6;

test def 4_/_3_=_1 := (4 / 3) = 1;

test def -4_/-3_=_1 := (-4 / -3) = 1;

test def 4_/-3_=_-2 := (4 / -3) = -2;

test def -4_/_3_=_-2 := (-4 / 3) = -2;

test def 1_/_0_=_0 := (1 / 0) = 0;

test def 4_%_3_=_1 := (4 % 3) = 1;

test def -4_%_-3_=_-1 := (-4 % -3) = -1;

test def 4_%_-3_=_-2 := (4 % -3) = -2;

test def -4_%_3_=_2 := (-4 % 3) = 2;

test def 1_%_0_=_0 := (1 % 0) = 0;

test def 1_min_2_=_1 := (1 min 2) = 1;

test def 2_min_1_=_1 := (2 min 1) = 1;

test def 1_max_2_=_2 := (1 max 2) = 2;

test def 2_max_1_=_2 := (2 max 1) = 2;

test def 1_=_1 := 1 = 1;

test def 1_<_2 := 1 < 2;

test def 1_<=_2 := 1 <= 2;

test def 1_<=_1 := 1 <= 1;

test def 2_>_1 := 2 > 1;

test def 2_>=_1 := 2 >= 1;

test def 2_>=_2 := 2 >= 2;

test def 1_!=_2 := 1 != 2;
